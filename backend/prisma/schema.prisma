generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  name      String
  addresses Address[]
  cart      Cart?
  orders    Order[]
}

model Product {
  id              Int         @id @default(autoincrement())
  name            String
  price           Float
  image           String
  discountedPrice Float?
  rating          Float
  description     String
  category        String
  cartItems       CartItem[]
  paymentIntentId String?
  orderItems      OrderItem[]
}

model Cart {
  id     Int        @id @default(autoincrement())
  user   User       @relation(fields: [userId], references: [id])
  userId Int        @unique
  items  CartItem[]
}

model CartItem {
  id        Int     @id @default(autoincrement())
  cart      Cart    @relation(fields: [cartId], references: [id])
  cartId    Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
}

model Address {
  id      Int     @id @default(autoincrement())
  user    User    @relation(fields: [userId], references: [id])
  userId  Int
  line1   String
  city    String
  zip     String
  country String
  phone   String
  Order   Order[]
}

model Order {
  id              Int         @id @default(autoincrement())
  user            User        @relation(fields: [userId], references: [id])
  userId          Int
  total           Float
  paymentIntentId String?
  address         Address?    @relation(fields: [addressId], references: [id])
  addressId       Int?
  createdAt       DateTime    @default(now())
  items           OrderItem[]
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
  price     Float
}
